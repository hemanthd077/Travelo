<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.2/css/all.css" integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" crossorigin="anonymous">
    <link rel="stylesheet" href="/home.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Great+Vibes&family=Open+Sans:wght@300;400;500;600;700;800&family=Philosopher&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Caveat:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <div id="main">
        <div id="homenavbar">
                <img id="appicon" src="/images/homelogo.png" alt="logo">
                <div class="bookingdiv">
                    <button id="bookingbutton" href="/home" ><i class="fa-solid fa-house"></i> Home</button>
                </div>

                <form action="/booking"  class="profilediv">
                    <button id="profilebutton" href="/booking"><i class="fa-brands fa-opencart"></i> Booking</button>
                </form>

                <form action="/likes-bus" class="profilediv">
                    <button id="profilebutton" href="/likes-bus"><i class="fa-solid fa-heart"></i> Liked</button>
                </form>

                <form action="/profile"  class="profilediv">
                    <button id="profilebutton" href="/profile"><i class="fa-solid fa-user"></i> Profile</button>
                </form>
                <form action="/profile"  class="profilediv">
                    <button id="profilebutton" href="/profile"><img id="profilepic-2" src="data:{{data.profileimage.ContentType}};base64,{{value}}" alt="Profile Image" /></button>
                </form>

                <form action="/exit" class="exitdiv">
                    <button id="exitbutton"><i class="fas fa-sign-out-alt fa-lg"></i>Sign Out</button>
                </form>                                                                                                 
        </div>

        {{#if content}}
            <div id="content">
                <div >
                    <p id="text-1">Your Tour Bus In Click</p>
                    <p id="text-2">BOOK YOUR RENTAL BUS ON</p>
                    <p id="text-3">TRAVELO</p>
                    <p id="text-4"></p><br><br>
                    <p id="text-5">Follow us on</p>
                    <div id="account-follow">
                        <a href=""><i class="fa-brands fa-instagram fa-lg"></i></a>
                        <a href=""><i class="fa-brands fa-twitter fa-lg"></i></a>
                        <a href=""><i class="fa-brands fa-linkedin fa-lg"></i></a>
                    </div>
                </div>
                <div>
                    <form action="/search" method="post" id="fromToBlock">
                        {{!-- <img id="img-homepage-gif" src="/videos/homepage-gif.gif" alt="gif"><br> --}}
                        <div id="input-content">
                            <input type="hidden" name="fromdistrict" id="fromdistrict">
                            <input type="hidden" name="fromstate" id="fromstate">
                            <label id="label-content" for="from">From:</label>
                            <p id="fromtext"><i class="fa-solid fa-city"></i><input type="text" id="from" placeholder="Enter the Pick Up Location" name="source" required onchange="handleInputChange()" autocomplete="off"></p>
                            <div id="suggestionfrom"></div>
                            {{!-- <button id="swapbutton"  onclick="swapInputs()" type="button"><img id="swapicon" src="/images/swap.png" alt="swapicon"></button> --}}
                            <input type="hidden" name="tostate" id="tostate">
                            <input type="hidden" name="tocity" id="tocity">
                            <label id="label-content" for="to">Tour City:</label>
                            <p id="totext"><i class="fa-solid fa-city"></i><input type="text" id="to" placeholder="Enter the Tour (City)" name="destination" required autocomplete="off" onchange="handleInputChange()"></p>
                            <div id="suggestionto"></div>
                            <label id="label-content" for="calander">Date of Start:</label>
                            <input type="date" id="calander" name="date" required>
                            <div id="inner-count-block">
                                <label id="label-content" for="no-days">No of Days:</label>
                                <label id="label-content-flex" for="no-passenger">Passengers count:</label>
                            </div>
                            <div id="inner-count-block">
                                <p id="days"><i class="fa-solid fa-calendar-days"></i><input type="number" min="1" id="no-days" placeholder="No of Days" name="days" required></p>
                                <p id="days"><i class="fa-solid fa-person-walking-luggage"></i><input type="number" min="1" id="no-passenger" placeholder="No of Passengers" name="passenger" required></p>
                            </div>    
                            <button id="searchbutton" href="/search" type="submit">Search</button>
                        </div>
                    </form>
                </div>
            </div>
        {{/if}}
    </div>
</body>

<script>

    const rotateButton = document.getElementById('swapbutton');
     const rotateMe = document.getElementById('swapicon');
    let isRotated = false;
    let val=0;
    let str;
    const inputfrom = document.getElementById("from");
    inputfrom.addEventListener("input", startfunfrom);

    const inputto = document.getElementById("to");
    inputto.addEventListener("input", startfunto);

    showSlides();

    function swapInputs() {
        let fromdistrict = document.getElementById("fromdistrict");
        let fromlocation = document.getElementById("from");
        let fromstate = document.getElementById("fromstate");
        let todistrict = document.getElementById("todistrict");
        let tolocation = document.getElementById("to");
        let tostate = document.getElementById("tostate");

        var temp = fromdistrict.value;
        fromdistrict.value = todistrict.value;
        todistrict.value = temp;

        temp = fromlocation.value;
        fromlocation.value = tolocation.value;
        tolocation.value = temp;

        var temp = fromstate.value;
        fromstate.value = tostate.value;
        tostate.value = temp;

        val+=180;
        if (!isRotated) {
            rotateMe.style.transform = `rotate(${val}deg)`;
            isRotated = true;
        } else {
            rotateMe.style.transform = `rotate(${val}deg)`;
            isRotated = false;
        }
    }


    //suggestion for from input tag
    function startfunfrom(){
      const targetElement = document.getElementById('suggestionfrom');
        var requestOptions = {
        method: 'GET',
      };
      fetch(`https://api.geoapify.com/v1/geocode/autocomplete?text=${inputfrom.value}&apiKey=da5be62269d9452c8acdd8005a75dd3f`, requestOptions)
        .then(response => response.json()) 
        .then(data => {
          const suggestions = data.features;

          if (suggestions.length > 0) {
            const suggestionsHtml = suggestions.map((suggestion,index) => {
              const location = suggestion.properties.formatted; 
              district =  suggestion.properties.state_district;
              state =  suggestion.properties.state;
              return `<button id="suggestionfrombutton" onclick="assignValuefrom('${location}','${district}','${state}')"><p id="suggestion-location"><i class="fa-solid fa-building"></i> ${location}</p></button>`;
            }).join('');
            targetElement.innerHTML = suggestionsHtml;
          } else {
            targetElement.innerHTML = '';
          }
        })
        .catch(error => {
          console.error('Error fetching data:', error);
        });
    }

    function assignValue(element) {
        const inputValue = element.textContent;
        const inputElement = document.getElementById('from');
        inputElement.value = inputValue;
        }

    //suggestion for to input tag
    function startfunto(){
      const targetElement = document.getElementById('suggestionto');
        var requestOptions = {
        method: 'GET',
      };
      if(inputto.value){
            fetch(`https://api.geoapify.com/v1/geocode/autocomplete?text=${inputto.value}&apiKey=da5be62269d9452c8acdd8005a75dd3f`, requestOptions)
            .then(response => response.json()) 
            .then(data => {
            const suggestions = data.features;
            if(suggestions.length > 0){
                for(let i=0;i<suggestions.length;i++){
                    district =  suggestions[0].properties.city;
                    state =  suggestions[0].properties.state;

                    if(district)
                    targetElement.innerHTML = `<button id="suggestiontobutton" onclick="assignValueTo('${district}','${state}')"><p id="suggestion-location"><i class="fa-solid fa-building"></i> ${district} ${state}</p></button>`;
                    else
                    targetElement.innerHTML = `<button id="suggestiontobutton" onclick="assignValueTo('')"><p id="suggestion-location"><i class="fa-solid fa-building"></i>Location Not Found...</p></button>`;
                }
            }
            else {
                targetElement.innerHTML = '';
            }
            })
            .catch(error => {
            console.error('Error fetching data:', error);
            });
        }
    }

    function assignValuefrom(location,district,state) {
        let fromdistrict = document.getElementById("fromdistrict");
        let fromlocation = document.getElementById("from");
        let fromstate = document.getElementById("fromstate");
        fromstate.value = state;
        fromdistrict.value = district;
        from.value = location;
        console.log("Fromlocation:"+from.value);
        console.log("\nFromdistrict:"+fromdistrict.value);
        console.log("\nFromstate:"+fromstate.value);
        fromlocation.onchange();
        const targetElement = document.getElementById('suggestionfrom');
        targetElement.innerHTML = '';
    }

    function assignValueTo(district,state) {
        let todistrict = document.getElementById("to");
        let tostate = document.getElementById("tostate")
        let tocity = document.getElementById("tocity");
        to.value = district+" "+state;
        tostate.value=state;
        tocity.value = district
        todistrict.onchange();
        const targetElement = document.getElementById('suggestionto');
        targetElement.innerHTML = '';
    }

    function handleInputChange() {
        
    }
    
</script>

</html>


